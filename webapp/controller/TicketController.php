<?php
use ArmoredCore\Controllers\BaseController;
use ArmoredCore\Interfaces\ResourceControllerInterface;
use ArmoredCore\WebObjects\Post;
use ArmoredCore\WebObjects\Redirect;
use ArmoredCore\WebObjects\View;

/**
 * CRUD Resource Controller for ActiveRecord Model Ticket
 *
 * Code generated by WebLogicMVC Code Builder
 *
 * Date: 2021-05-24
 *
 * WL Code Builder developed by SÃ­lvio Priem Mendes
 * *
 */

class TicketController extends BaseController implements ResourceControllerInterface
{
    /**
     * Returns index view with all records
     */
    public function index()
    {
        $ticket = Ticket::all();
        return View::make('ticket.index', ['ticket' => $ticket]);
    }


    /**
     * Returns a view with a form to create a new record
     */
    public function create()
    {
        $flights = Flight::all();
        $users = User::all(array('conditions' => array('role == ?', 'passageiro')));
        return View::make('ticket.create', ['flights' => $flights, 'users' => $users]);
    }


    /**
     * Receives new record data through POST method and stores it in the DB table
     */
    public function store()
    {
        //create new resource (activerecord/model) instance with data from POST
        //your form name fields must match the ones of the table fields
        $ticket = new Ticket(Post::getAll());
        $scales = Scale::find('all', array('idvoo' => $ticket->idvooida));

        if($ticket->is_valid()){
            $ticket->save();
            foreach ($scales as $scale){
                $planescale = Planescale::find(array('idescala' => $scale->id));

                if($planescale != null){
                    $planescale->update_attribute('nrpassageiros', $planescale->nrpassageiros +1);
                }
            }
            Redirect::toRoute('passageiro/historicopassagens');
        } else {
            //redirect to form with data and errors
            Redirect::flashToRoute('search/comprarticket');
        }
    }


    /**
     * return a detailed view with record where PK = $id
     */
    public function show($id)
    {
        $ticket = Ticket::find([$id]);

        if (is_null($ticket)) {
            //TODO redirect to standard error page
        } else {
            return View::make('ticket.show', ['ticket' => $ticket]);
        }
    }


    /**
     * return a editable form view with record where PK = $id
     */
    public function edit($id)
    {
        $ticket = Ticket::find([$id]);

        if (is_null($ticket)) {
            //TODO redirect to standard error page
        } else {
            $flights = Flight::all();
            $users = User::all(array('conditions' => array('role = ?', 'passageiro')));
            return View::make('ticket.edit', ['ticket' => $ticket, 'flights' => $flights, 'users' => $users]);
        }
    }


    /**
     * Receives record data through POST method and updates it in the DB table
     */
    public function update($id)
    {
        //find resource (activerecord/model) instance where PK = $id
        //your form name fields must match the ones of the table fields
        $ticket = Ticket::find([$id]);
        $ticket->update_attributes(Post::getAll());
        print_r($ticket);
        if($ticket->is_valid()){
            $ticket->save();

            Redirect::toRoute('operadorcheckin/checkin');
        } else {
            //redirect to form with data and errors
            //Redirect::flashToRoute('ticket/edit', ['ticket' => $ticket]);
        }
    }


    /**
     * deletes the record where PK = $id
     */
    public function destroy($id)
    {
        $ticket = ticket::find([$id]);
        $ticket->delete();
        Redirect::toRoute('ticket/index');
    }
}